@page "/shiftlist"
@attribute [Authorize(Roles = "Coordinator, Volunteer")]
@using FestivalApp.Shared.Models;
@inject NavigationManager NavigationManager
@inject HttpClient http
@inject AuthenticationStateProvider authenticationStateProvider

<PageTitle>Shift List</PageTitle>

<!-- Shift Overview Section with a heading and a table -->
<h1 class="mb-3 mt-3">Shift Overview</h1>

<!-- Table to display shifts with a button to view bookings -->
<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <!-- Loop through shifts to populate the table rows -->
        @foreach (var shift in shifts)
        {
            <tr>
                <td>@shift.Navn</td>
                <td>
                    <!-- Button to view bookings for the selected shift -->
                    <button class="btn btn-primary" @onclick="() => ShowBookings(shift)">View Bookings</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal Dialog to display bookings for the selected shift -->
<ModalDialog @ref="modalRef" Title="Bookings">
    <!-- Check if a shift is selected to display its bookings -->
    @if (selectedShift != null)
    {
        <!-- Table to display bookings with columns for relevant information -->
        <table class="table">
            <thead>
                <tr>
                    <th>BookingID</th>
                    <th>Name</th>
                    <th>Phone Number</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <!-- Loop through selectedShiftBookings to populate the table rows -->
                @foreach (var booking in selectedShiftBookings)
                {
                    <tr>
                        <td>@booking.BookingID</td>
                        <td>@booking.Name</td>
                        <td>@booking.Phonenr</td>
                        <td>@booking.StartDate</td>
                        <td>@booking.EndDate</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</ModalDialog>

@code {
    // List of shifts, selected shift's bookings, and the currently selected shift
    private List<Shift> shifts = new List<Shift>();
    private List<Booking> selectedShiftBookings = new List<Booking>();
    private Shift selectedShift;

    // Reference to the ModalDialog component
    private ModalDialog modalRef { get; set; }

    // SemaphoreSlim to avoid double-clicking issues
    private SemaphoreSlim semaphoreSlim = new SemaphoreSlim(1, 1);

    // Method executed when the component is initialized to retrieve shifts from the API
    protected override async Task OnInitializedAsync()
    {
        shifts = await http.GetFromJsonAsync<List<Shift>>("api/schifts");
    }

    // Method to display bookings for the selected shift, avoiding double-clicking issues
    private async Task ShowBookings(Shift shift)
    {
        await semaphoreSlim.WaitAsync();

        try
        {
            selectedShift = shift;
            // Retrieve bookings for the selected shift from the API
            var t = await http.GetFromJsonAsync<List<Booking>>($"api/bookings");

            // Filter bookings based on the selected shift's name
            selectedShiftBookings = t.Where(b => b.ShiftName.Equals(shift.Navn)).ToList();

            // Open the ModalDialog to display bookings
            modalRef.Open();
        }
        finally
        {
            semaphoreSlim.Release();
        }
    }
}
